[tool.poetry]
name = "rd_syncrr"
version = "0.1.0"
description = ""
authors = [

]
maintainers = [

]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.100.0"
uvicorn = { version = "^0.22.0", extras = ["standard"] }
gunicorn = "^21.2.0"
pydantic = "^2"
pydantic-settings = "^2"
yarl = "^1.9.2"
ujson = "^5.8.0"
aiofiles = "^23.1.0"
httptools = "^0.6.0"
loguru = "^0.7.0"
requests = "^2.31.0"
apscheduler = "^3.10.4"
sqlalchemy = "^2.0.23"
plexapi = "^4.15.6"
aiosqlite = "^0.19.0"
greenlet = "^3.0.2"
shortuuid = "^1.0.11"
types-requests = "^2.31.0.10"
overrides = "^7.4.0"



[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
mypy = "^1.1.1"
pre-commit = "^3.0.1"
wemake-python-styleguide = "^0.17.0"
black = "^22.12.0"
autoflake = "^1.6.1"
pytest-cov = "^4.0.0"
anyio = "^3.6.2"
pytest-env = "^0.8.1"
httpx = "^0.23.3"
ruff = "^0.1.8"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
preview = true

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
exclude = ["security_db", "auth", "security", "pyarr"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "RD_SYNCRR_ENVIRONMENT=pytest",
    "RD_SYNCRR_DB_BASE=rd_syncrr_test",
]

[tool.ruff]
target-version = "py39"
line-length = 100
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # DoNotAssignLambda
    "E731",
    # TypeIgnoredWithComment
    "PGH003",
    # LongMessageInExceptionClass
    "TRY003",
    # DictShouldBeAbleToUseLiteral
    "UP006",
]
exclude = [
    "security_db",
    "auth",
    "security",
    "pyarr"
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
